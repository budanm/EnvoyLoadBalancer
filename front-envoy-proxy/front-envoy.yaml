static_resources:
  listeners:
  - name: http_listener
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
      - filters:
          - name: envoy.http_connection_manager
            config:
              codec_type: auto
              http_filters:
                - name: envoy.router
                  config: {}
              route_config:
                name: local_route
                virtual_hosts:
                  - name: backend
                    domains:
                      - "example.com"
                    routes:
                      - match:
                          prefix: /
                        redirect:
                          https_redirect: true # Swap http with https and 301
              stat_prefix: ingress_http 
  - name:  https_listener
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 443
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/service/1"
                route:
                  cluster: service1
              - match:
                  prefix: "/service/2"
                route:
                  cluster: service2              
              - match:
                  prefix: "/httpbin"
                route:
                  cluster: httpbin
                  host_rewrite: httpbin.org
          http_filters:
          - name: envoy.router
            typed_config: {}
      tls_context:
        common_tls_context:
          tls_certificates:
            - certificate_chain:
                filename: "/etc/server-crt.pem"
              private_key:
                filename: "/etc/server-key.pem"
          validation_context:
            trusted_ca:
              filename: "/etc/ca-crt.pem"
        #require_client_certificate: true      
  clusters:
  - name: service1
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    load_assignment:
      cluster_name: service1
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: service1
                port_value: 80
  - name: service2
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    load_assignment:
      cluster_name: service2
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: service2
                port_value: 80
  - name: httpbin
    common_lb_config:
      healthy_panic_threshold:
        value: 0.0
    connect_timeout: 0.25s
    type: STRICT_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    hosts: [{ socket_address: { address: httpbin.org, port_value: 80 }}]
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001